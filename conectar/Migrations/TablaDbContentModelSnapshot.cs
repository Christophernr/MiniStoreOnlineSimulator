// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using conexionaSQL;

#nullable disable

namespace conectar.Migrations
{
    [DbContext(typeof(TablaDbContent))]
    partial class TablaDbContentModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tablas_atributos.Empleado", b =>
                {
                    b.Property<int>("idEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEmpleado"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("salario")
                        .HasColumnType("int");

                    b.HasKey("idEmpleado");

                    b.ToTable("EMPLEADOS", (string)null);

                    b.HasDiscriminator().HasValue("Empleado");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("tablas_atributos.Producto", b =>
                {
                    b.Property<int>("Idproducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idproducto"));

                    b.Property<int>("devoluciones")
                        .HasColumnType("int");

                    b.Property<decimal>("oferta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("Idproducto");

                    b.ToTable("PRODUCTOS", (string)null);
                });

            modelBuilder.Entity("tablas_atributos.Rutas", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<string>("destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("distanciaKm")
                        .HasColumnType("int");

                    b.Property<string>("origen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codigo");

                    b.ToTable("RUTAS", (string)null);
                });

            modelBuilder.Entity("tablas_atributos.Vehiculo", b =>
                {
                    b.Property<int>("placa")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<decimal>("capacidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("precioCombustible")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rendimiento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipoCombustible")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("placa");

                    b.ToTable("VEHICULOS", (string)null);

                    b.HasDiscriminator().HasValue("Vehiculo");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("tablas_atributos.viaje", b =>
                {
                    b.Property<int>("idViaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idViaje"));

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cantidades")
                        .HasColumnType("int");

                    b.Property<int>("compraOferta")
                        .HasColumnType("int");

                    b.Property<decimal>("costoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("empleadoid")
                        .HasColumnType("int");

                    b.Property<int>("productoId")
                        .HasColumnType("int");

                    b.Property<int>("rutaId")
                        .HasColumnType("int");

                    b.Property<int>("vehiculoId")
                        .HasColumnType("int");

                    b.HasKey("idViaje");

                    b.HasIndex("empleadoid");

                    b.HasIndex("productoId");

                    b.HasIndex("rutaId");

                    b.HasIndex("vehiculoId");

                    b.ToTable("VIAJES", (string)null);
                });

            modelBuilder.Entity("subclases.Conductor", b =>
                {
                    b.HasBaseType("tablas_atributos.Empleado");

                    b.Property<decimal>("eficienciaBono")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipoLicencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Conductor");
                });

            modelBuilder.Entity("subclases.Mecanico", b =>
                {
                    b.HasBaseType("tablas_atributos.Empleado");

                    b.Property<int>("reparacionesRealizadas")
                        .HasColumnType("int");

                    b.Property<int>("vehiculosAsignados")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Mecanico");
                });

            modelBuilder.Entity("subclases.VehiculoLiguero", b =>
                {
                    b.HasBaseType("tablas_atributos.Vehiculo");

                    b.Property<string>("LicenciausoUrbano")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("VehiculoLiguero");
                });

            modelBuilder.Entity("subclases.VehiculoPesado", b =>
                {
                    b.HasBaseType("tablas_atributos.Vehiculo");

                    b.Property<string>("licenciaEspecial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("VehiculoPesado");
                });

            modelBuilder.Entity("tablas_atributos.viaje", b =>
                {
                    b.HasOne("tablas_atributos.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("empleadoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tablas_atributos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("productoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tablas_atributos.Rutas", "Rutas")
                        .WithMany()
                        .HasForeignKey("rutaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tablas_atributos.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("vehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Producto");

                    b.Navigation("Rutas");

                    b.Navigation("Vehiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
